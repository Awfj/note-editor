{"version":3,"sources":["components/pages/notes/Note/Note.module.scss","containers/NewNote/NewNote.module.scss","components/Navigation/Navigation.module.scss","components/shared/Tags/Tags.module.scss","containers/Notes/Notes.module.scss","containers/NoteDetails/NoteDetails.module.scss","containers/App/App.module.scss","components/shared/Tags/Tags.js","components/pages/notes/Note/Note.js","containers/Notes/Notes.js","containers/NoteDetails/NoteDetails.js","containers/NewNote/NewNote.js","components/Navigation/Navigation.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","note","icons","edit","remove","newNote","success","formGroup","submit","logo","active","tags","listGroup","addButton","removeButton","notes","search","noteDetails","editNoteForm","app","props","body","length","react_default","a","createElement","map","tag","index","key","className","classes","react_router_dom","to","pathname","id","react_fontawesome_index_es","icon","onClick","removeNoteHandler","value","Tags","tagsType","Notes","_this","this","notesExist","notesNotFound","heading","searching","foundNotes","Note","type","placeholder","searchValue","onChange","searchHandler","Component","NoteDetails","noteId","match","params","currentNote","find","name","event","onChangeEditNoteHandler","react_router","react","NewNote","noteAdded","onSubmit","addNoteHandler","noteValue","onChangeNewNoteHandler","noteTags","navigation","activeClassName","exact","library","add","fas","uuidv4","require","App","state","notesJSON","preventDefault","updatedNotes","concat","setState","filter","updatedFoundNotes","target","Object","toConsumableArray","foundTags","startsWith","join","includes","split","word","noteIndex","findIndex","objectSpread","_this2","Navigation","path","render","containers_Notes_Notes","containers_NewNote_NewNote","containers_NoteDetails_NoteDetails","assign","Boolean","window","location","hostname","containers_App_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5f16b91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__2AyVF\",\"icons\":\"Note_icons__1ztJG\",\"edit\":\"Note_edit__21oOA\",\"remove\":\"Note_remove__3C01H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newNote\":\"NewNote_newNote__1JOx1\",\"success\":\"NewNote_success__3E0Er\",\"formGroup\":\"NewNote_formGroup__2uswX\",\"submit\":\"NewNote_submit__29AxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Navigation_logo__3d1CJ\",\"newNote\":\"Navigation_newNote__1gF9l\",\"active\":\"Navigation_active__q6uuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags_tags__1wT0G\",\"listGroup\":\"Tags_listGroup__3hgBq\",\"addButton\":\"Tags_addButton__2-1O5\",\"removeButton\":\"Tags_removeButton__dTxV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notes\":\"Notes_notes__1bAVz\",\"search\":\"Notes_search__3OV6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noteDetails\":\"NoteDetails_noteDetails__375Dp\",\"editNoteForm\":\"NoteDetails_editNoteForm__25San\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1ZbxY\"};","import React from \"react\";\r\n\r\nimport classes from \"./Tags.module.scss\";\r\n\r\nconst tags = props => {\r\n  let body = null;\r\n\r\n  if (props.tags.length !== 0) {\r\n    body = (\r\n      <ul>\r\n        {props.tags.map((tag, index) => (\r\n          <div key={index} className={classes.listGroup}>\r\n            <li className={classes.tags}>\r\n              {tag}\r\n            </li>\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return <div className={classes.tags}>{body}</div>;\r\n};\r\n\r\nexport default tags;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport classes from \"./Note.module.scss\";\r\nimport Tags from \"../../../shared/Tags/Tags\";\r\n\r\nconst note = props => {\r\n  return (\r\n    <div className={classes.note}>\r\n      <div className={classes.icons}>\r\n        <Link\r\n          className={classes.edit}\r\n          to={{ pathname: \"/note-editor/edit/\" + props.id }}\r\n        >\r\n          <FontAwesomeIcon icon={[\"fas\", \"edit\"]} />\r\n        </Link>\r\n        <button\r\n          className={classes.remove}\r\n          onClick={() => props.removeNoteHandler(props.id)}\r\n        >\r\n          <FontAwesomeIcon icon={[\"fas\", \"times\"]} />\r\n        </button>\r\n      </div>\r\n      <p>{props.value}</p>\r\n      <Tags tags={props.tags} tagsType=\"NoteTags\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default note;\r\n","import React, { Component } from \"react\";\r\n\r\nimport classes from \"./Notes.module.scss\";\r\nimport Note from \"../../components/pages/notes/Note/Note\";\r\n\r\nclass Notes extends Component {\r\n  render() {\r\n    let notesExist = \"There are no notes\";\r\n    let notesNotFound = null;\r\n    let heading = null;\r\n\r\n    if (this.props.searching && this.props.foundNotes.length === 0) {\r\n      notesNotFound = \"No notes found\";\r\n    }\r\n\r\n    if (!this.props.searching) {\r\n      if (this.props.notes.length !== 0) {\r\n        notesExist = this.props.notes.map(note => (\r\n          <Note\r\n            key={note.id}\r\n            id={note.id}\r\n            value={note.value}\r\n            tags={note.tags}\r\n            removeNoteHandler={this.props.removeNoteHandler}\r\n          />\r\n        ));\r\n      }\r\n      heading = <h2>All Notes</h2>;\r\n    } else {\r\n      notesExist = this.props.foundNotes.map(note => (\r\n        <Note\r\n          key={note.id}\r\n          id={note.id}\r\n          value={note.value}\r\n          tags={note.tags}\r\n          removeNoteHandler={this.props.removeNoteHandler}\r\n        />\r\n      ));\r\n      heading = <h2>Found Notes</h2>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <form>\r\n          <input\r\n            className={classes.search}\r\n            type=\"text\"\r\n            placeholder=\"Search by tag...\"\r\n            value={this.props.searchValue}\r\n            onChange={this.props.searchHandler}\r\n          />\r\n        </form>\r\n        {heading}\r\n        <div className={classes.notes}>\r\n          {notesExist}\r\n          {notesNotFound}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notes;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport classes from \"./NoteDetails.module.scss\";\r\nimport Tags from \"../../components/shared/Tags/Tags\";\r\n\r\nclass NoteDetails extends Component {\r\n  render() {\r\n    const noteId = this.props.match.params.noteId;\r\n    let body = null;\r\n\r\n    const currentNote = this.props.notes.find(note => {\r\n      return note.id === noteId;\r\n    });\r\n\r\n    if (!currentNote) {\r\n      body = <Redirect to=\"/note-editor\" />;\r\n    } else {\r\n      body = (\r\n        <div className={classes.noteDetails}>\r\n          <h2>Edit Note</h2>\r\n          <form className={classes.editNoteForm}>\r\n            <textarea\r\n              name=\"note-details\"\r\n              value={currentNote.value}\r\n              onChange={event =>\r\n                this.props.onChangeEditNoteHandler(event, noteId)\r\n              }\r\n            />\r\n          </form>\r\n          <Tags tags={currentNote.tags} />\r\n        </div>\r\n      );\r\n    }\r\n    return <Fragment>{body}</Fragment>;\r\n  }\r\n}\r\n\r\nexport default NoteDetails;\r\n","import React, { Component } from \"react\";\r\n\r\nimport classes from \"./NewNote.module.scss\";\r\nimport Tags from \"../../components/shared/Tags/Tags\";\r\n\r\nclass NewNote extends Component {\r\n  render() {\r\n    let success = null;\r\n    if (this.props.noteAdded) {\r\n      success = <p className={classes.success}>New Note Added!</p>;\r\n    }\r\n    return (\r\n      <div className={classes.newNote}>\r\n        <h2>New Note</h2>\r\n        <form onSubmit={this.props.addNoteHandler}>\r\n          <textarea\r\n            name=\"note\"\r\n            placeholder=\"Type something... New tags are created with #.\"\r\n            value={this.props.noteValue}\r\n            onChange={this.props.onChangeNewNoteHandler}\r\n          />\r\n          {success}\r\n          <div className={classes.formGroup}>\r\n            <button className={classes.submit}>Add Note</button>\r\n            <Tags tags={this.props.noteTags} />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewNote;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport classes from \"./Navigation.module.scss\";\r\n\r\nconst navigation = () => {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to=\"/note-editor\"\r\n        activeClassName={classes.active}\r\n        className={classes.logo}\r\n        exact\r\n      >\r\n        Note Editor\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/note-editor/new-note\"\r\n        activeClassName={classes.active}\r\n        className={classes.newNote}\r\n      >\r\n        New Note\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default navigation;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\n\nimport classes from \"./App.module.scss\";\nimport notesJSON from \"../../assets/notes.json\";\nimport Notes from \"../Notes/Notes\";\nimport NoteDetails from \"../NoteDetails/NoteDetails\";\nimport NewNote from \"../NewNote/NewNote\";\nimport Navigation from \"../../components/Navigation/Navigation\";\n\nlibrary.add(fas);\nconst uuidv4 = require(\"uuid/v4\");\n\nclass App extends Component {\n  state = {\n    notes: notesJSON.notes,\n    foundNotes: [],\n    noteValue: \"\",\n    noteTags: [],\n    searchValue: \"\",\n    noteAdded: false,\n    searching: false\n  };\n\n  addNoteHandler = event => {\n    event.preventDefault();\n\n    const notes = this.state.notes;\n    const noteTags = this.state.noteTags;\n    const noteValue = this.state.noteValue;\n\n    if (!noteValue) {\n      return;\n    }\n\n    const updatedNotes = [].concat(\n      { id: uuidv4(), value: noteValue, tags: noteTags },\n      notes\n    );\n\n    this.setState({\n      notes: updatedNotes,\n      noteAdded: true,\n      noteValue: \"\",\n      noteTags: []\n    });\n  };\n\n  removeNoteHandler = noteId => {\n    const notes = this.state.notes;\n    const foundNotes = this.state.foundNotes;\n    const updatedNotes = notes.filter(note => note.id !== noteId);\n    const updatedFoundNotes = foundNotes.filter(note => note.id !== noteId);\n\n    this.setState({ notes: updatedNotes, foundNotes: updatedFoundNotes });\n  };\n\n  searchHandler = event => {\n    const searchValue = event.target.value;\n    const notes = [...this.state.notes];\n\n    const foundNotes = notes.filter(note => {\n      const foundTags = note.tags.filter(tag => {\n        return tag.startsWith(\"#\" + searchValue);\n      });\n\n      return (\n        note.tags.join(\" \").startsWith(searchValue) ||\n        note.tags.includes(foundTags.join(\" \"))\n      );\n    });\n\n    this.setState({ searchValue, foundNotes, searching: true });\n\n    if (searchValue.length === 0) {\n      this.setState({ searching: false });\n    }\n  };\n\n  onChangeEditNoteHandler = (event, noteId) => {\n    const value = event.target.value;\n    const noteTags = value\n      .split(\" \")\n      .filter(word => word.startsWith(\"#\") && word.length !== 1);\n\n    let notes = [...this.state.notes];\n    const noteIndex = notes.findIndex(note => note.id === noteId);\n    const note = { ...notes[noteIndex] };\n    note.value = value;\n    note.tags = noteTags;\n    notes[noteIndex] = note;\n    this.setState({ notes });\n  };\n\n  onChangeNewNoteHandler = event => {\n    const value = event.target.value;\n    const noteTags = value\n      .split(\" \")\n      .filter(word => word.startsWith(\"#\") && word.length !== 1);\n\n    this.setState({ noteTags, noteValue: value, noteAdded: false });\n  };\n\n  render() {\n    return (\n      <div className={classes.app}>\n        <header>\n          <Navigation />\n        </header>\n\n        <main>\n          <Switch>\n            <Route\n              path=\"/note-editor\"\n              exact\n              render={() => (\n                <Notes\n                  notes={this.state.notes}\n                  foundNotes={this.state.foundNotes}\n                  searching={this.state.searching}\n                  searchValue={this.state.searchValue}\n                  removeNoteHandler={this.removeNoteHandler}\n                  searchHandler={this.searchHandler}\n                />\n              )}\n            />\n            <Route\n              path=\"/note-editor/new-note\"\n              render={() => (\n                <NewNote\n                  notes={this.state.notes}\n                  noteValue={this.state.noteValue}\n                  noteTags={this.state.noteTags}\n                  noteAdded={this.state.noteAdded}\n                  addNoteHandler={this.addNoteHandler}\n                  onChangeNewNoteHandler={this.onChangeNewNoteHandler}\n                />\n              )}\n            />\n            <Route\n              path=\"/note-editor/edit/:noteId\"\n              render={props => (\n                <NoteDetails\n                  notes={this.state.notes}\n                  onChangeEditNoteHandler={this.onChangeEditNoteHandler}\n                  {...props}\n                />\n              )}\n            />\n            <Redirect to=\"/note-editor\" />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}